@model Danchi.Models.DashboardViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Dashboard";
}
<style>
    .admin-dashboard-container {
        max-width: 1100px;
        margin: 2.5rem auto;
        background: #fff;
        border-radius: 1.5rem;
        box-shadow: 0 6px 32px #ebb3b370, 0 2px 14px #f8b6b938;
        padding: 2.3rem 1.5rem 2.5rem 1.5rem;
    }

    .admin-dashboard-title {
        color: #8a6d6d;
        font-size: 2.1rem;
        font-weight: 800;
        text-align: center;
        margin-bottom: 2rem;
    }

    .admin-dashboard-row {
        display: flex;
        gap: 1.2rem;
        margin-bottom: 2.2rem;
        flex-wrap: wrap;
    }

    .admin-dashboard-card {
        flex: 1 1 260px;
        background: linear-gradient(100deg, #ffe1e7 55%, #ebb3b3 100%);
        border-radius: 1.1rem;
        padding: 1.3rem 1.2rem;
        min-width: 200px;
        box-shadow: 0 2px 13px #ebb3b344;
        display: flex;
        flex-direction: column;
        align-items: flex-start;
    }

        .admin-dashboard-card .label {
            font-size: 1.01rem;
            color: #ad7b7b;
            margin-bottom: 0.4rem;
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: .01em;
        }

        .admin-dashboard-card .value {
            font-size: 2.1rem;
            font-weight: 800;
            color: #ce466d;
        }

    .admin-dashboard-section {
        margin-top: 2.1rem;
    }

    .admin-dashboard-section-title {
        font-size: 1.13rem;
        color: #ce466d;
        font-weight: 700;
        margin-bottom: 1.1rem;
    }

    .admin-dashboard-chart {
        background: linear-gradient(100deg, #ffe1e7 70%, #ebb3b3 100%);
        border-radius: 1.1rem;
        box-shadow: 0 1.5px 9px #ebb3b326;
        padding: 1.5rem 1.2rem;
        margin-bottom: 1.5rem;
        min-height: 230px;
        width: 100%;
    }

        .admin-dashboard-chart canvas {
            width: 100% !important;
            max-height: 240px;
            margin: 0 auto;
        }

    @@media (max-width: 900px) {
        .admin-dashboard-row {
            flex-direction: column;
            gap: .7rem;
        }

        .admin-dashboard-container {
            padding: 1.3rem 0.4rem;
        }
    }
</style>

<div class="admin-dashboard-container">
    <div class="admin-dashboard-title">Panel de Control</div>

    <div class="admin-dashboard-row">
        <div class="admin-dashboard-card">
            <span class="label">Torres</span>
            <span class="value">@Model.TotalTorres</span>
        </div>
        <div class="admin-dashboard-card">
            <span class="label">Apartamentos</span>
            <span class="value">@Model.TotalAptos</span>
        </div>
        <div class="admin-dashboard-card">
            <span class="label">Propietarios</span>
            <span class="value">@Model.TotalPropietarios</span>
        </div>
    </div>

    <div class="admin-dashboard-section">
        <div class="admin-dashboard-section-title">Mensajes Enviados y Recibidos</div>
        <div class="admin-dashboard-chart">
            <canvas id="mensajesChart"></canvas>
        </div>
    </div>

    <div class="admin-dashboard-section">
        <div class="admin-dashboard-section-title">Eventos y Reservas</div>
        <div class="admin-dashboard-chart">
            <canvas id="eventosReservasChart"></canvas>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const mensajesEnviados = @Html.Raw(Json.Encode(Model.MensajesEnviadosPorMes));
        const mensajesRecibidos = @Html.Raw(Json.Encode(Model.MensajesRecibidosPorMes));
        const eventos = @Html.Raw(Json.Encode(Model.EventosPorMes));
        const reservas = @Html.Raw(Json.Encode(Model.ReservasPorMes));

        const meses = Array.from(new Set([
            ...Object.keys(mensajesEnviados),
            ...Object.keys(mensajesRecibidos),
            ...Object.keys(eventos),
            ...Object.keys(reservas)
        ])).sort();

        const enviadosData = meses.map(m => mensajesEnviados[m] || 0);
        const recibidosData = meses.map(m => mensajesRecibidos[m] || 0);
        const eventosData = meses.map(m => eventos[m] || 0);
        const reservasData = meses.map(m => reservas[m] || 0);

        // Mensajes Chart
        new Chart(document.getElementById("mensajesChart"), {
            type: 'bar',
            data: {
                labels: meses,
                datasets: [
                    {
                        label: "Enviados",
                        backgroundColor: "#ce466d", // rosado fuerte
                        data: enviadosData,
                        barThickness: 22
                    },
                    {
                        label: "Recibidos",
                        backgroundColor: "#ebb3b3", // rosa claro
                        data: recibidosData,
                        barThickness: 22
                    }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: { beginAtZero: true, ticks: { font: { size: 11 } } },
                    x: { ticks: { font: { size: 11 } } }
                },
                plugins: {
                    legend: { labels: { font: { size: 12 } } }
                }
            }
        });

        // Eventos y Reservas Chart
        new Chart(document.getElementById("eventosReservasChart"), {
            type: 'bar',
            data: {
                labels: meses,
                datasets: [
                    {
                        label: "Eventos",
                        backgroundColor: "#ed8a63", // naranja pastel
                        data: eventosData,
                        barThickness: 22
                    },
                    {
                        label: "Reservas",
                        backgroundColor: "#46d6bb", // verde agua pastel
                        data: reservasData,
                        barThickness: 22
                    }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: { beginAtZero: true, ticks: { font: { size: 11 } } },
                    x: { ticks: { font: { size: 11 } } }
                },
                plugins: {
                    legend: { labels: { font: { size: 12 } } }
                }
            }
        });
    </script>
}
